
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MedicalHistoryScalarFieldEnum = {
  historyId: 'historyId',
  patientId: 'patientId',
  openedAt: 'openedAt',
  status: 'status'
};

exports.Prisma.ClinicalEntryScalarFieldEnum = {
  entryId: 'entryId',
  historyId: 'historyId',
  date: 'date',
  type: 'type',
  reasonForVisit: 'reasonForVisit',
  diagnosis: 'diagnosis',
  notes: 'notes',
  doctorId: 'doctorId'
};

exports.Prisma.ClinicalDocumentScalarFieldEnum = {
  documentId: 'documentId',
  entryId: 'entryId',
  type: 'type',
  fileUrl: 'fileUrl',
  metadata: 'metadata'
};

exports.Prisma.AntecedentScalarFieldEnum = {
  antecedentId: 'antecedentId',
  type: 'type',
  description: 'description',
  historyId: 'historyId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  MedicalHistory: 'MedicalHistory',
  ClinicalEntry: 'ClinicalEntry',
  ClinicalDocument: 'ClinicalDocument',
  Antecedent: 'Antecedent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Desktop\\Universidad\\octavo semestre\\Backend\\his\\apps\\ehr\\prisma\\generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Desktop\\Universidad\\octavo semestre\\Backend\\his\\apps\\ehr\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel MedicalHistory {\n  historyId       Int             @id @default(autoincrement())\n  patientId       Int             @unique\n  openedAt        DateTime\n  status          Boolean\n  clinicalEntries ClinicalEntry[]\n  antecedents     Antecedent[]\n}\n\nmodel ClinicalEntry {\n  entryId        Int      @id @default(autoincrement())\n  historyId      Int\n  date           DateTime\n  type           String\n  reasonForVisit String\n  diagnosis      String\n  notes          String?\n  doctorId       Int\n\n  history           MedicalHistory     @relation(fields: [historyId], references: [historyId])\n  clinicalDocuments ClinicalDocument[]\n}\n\nmodel ClinicalDocument {\n  documentId Int    @id @default(autoincrement())\n  entryId    Int\n  type       String\n  fileUrl    String\n  metadata   Json?\n\n  entry ClinicalEntry @relation(fields: [entryId], references: [entryId])\n}\n\nmodel Antecedent {\n  antecedentId Int    @id @default(autoincrement())\n  type         String\n  description  String\n  historyId    Int\n\n  history MedicalHistory @relation(fields: [historyId], references: [historyId])\n}\n",
  "inlineSchemaHash": "f7dec9f0d0cdf57eba3bcca1ee0cf955284235baac9fc8a5a91f05b8c43dab59",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"MedicalHistory\":{\"fields\":[{\"name\":\"historyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"clinicalEntries\",\"kind\":\"object\",\"type\":\"ClinicalEntry\",\"relationName\":\"ClinicalEntryToMedicalHistory\"},{\"name\":\"antecedents\",\"kind\":\"object\",\"type\":\"Antecedent\",\"relationName\":\"AntecedentToMedicalHistory\"}],\"dbName\":null},\"ClinicalEntry\":{\"fields\":[{\"name\":\"entryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"historyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reasonForVisit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"MedicalHistory\",\"relationName\":\"ClinicalEntryToMedicalHistory\"},{\"name\":\"clinicalDocuments\",\"kind\":\"object\",\"type\":\"ClinicalDocument\",\"relationName\":\"ClinicalDocumentToClinicalEntry\"}],\"dbName\":null},\"ClinicalDocument\":{\"fields\":[{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"entry\",\"kind\":\"object\",\"type\":\"ClinicalEntry\",\"relationName\":\"ClinicalDocumentToClinicalEntry\"}],\"dbName\":null},\"Antecedent\":{\"fields\":[{\"name\":\"antecedentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"historyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"MedicalHistory\",\"relationName\":\"AntecedentToMedicalHistory\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

